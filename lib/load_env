#!/bin/bash

function usage() {
    case $0 in 
    environment.sh)
        environment_usage
        ;;
    ssh-config.sh)
        ssh_config_usage
        ;;
        *)
        err "\$0 = $0: No idea which useage function to use!"
    esac
}

function ssh_config_usage() {
    echo
    echo "Generates ssh and ssh key configuration files from the environment.yml"
    echo
    echo "ssh-config.sh <env_name>"
    echo
    echo "   environment: a valid environment within the environments directory"
    echo
}


function environment_usage() {
    echo
    echo "Generates environment configuration files from the environment.yml"
    echo
    echo "environment.sh <env_name>"
    echo
    echo "   environment: a valid environment within the environments directory"
    echo
}

BASE_DIR="`dirname \"$0\"`"
BASE_DIR="`( cd \"$BASE_DIR\" && pwd )`"
TOP_DIR="$BASE_DIR/.."

. $TOP_DIR/lib/general
. $TOP_DIR/lib/yaml
. $TOP_DIR/lib/settings

env_name="$1"
# Check if we have an absolute path
if [ -n "$(echo $environments | egrep '^/.*')" ]; then
  env_dir="$environments/$env_name"
else
  env_dir="$TOP_DIR/$environments/$env_name"
fi
env_yaml="$env_dir/environment.yml"
env_conf="$env_dir/environment"

if [ -n "$env_name" ]; then
  if [ ! -d "$env_dir" ]; then
    err "Environment directory $env_dir contains no $env_yaml"
    usage; exit 20
  fi
else
  err "$env_name is not a valid environment name."
  usage; exit 2
fi

# loading the variables in the env_yaml and overrides if outside environment
rec 0 "$env_yaml"
if [ "$outside" == "true" -a -f "$overrides/environments/$env_name/environment.yml" ]; then
  rec 0 "$overrides/environments/$env_name/environment.yml"
fi
