#!/bin/bash

BASE_DIR="`dirname \"$0\"`"
BASE_DIR="`( cd \"$BASE_DIR\" && pwd )`"

if [ -z "$TOP_DIR" ]; then
  TOP_DIR="$BASE_DIR/.."
fi

. $TOP_DIR/lib/general
. $TOP_DIR/lib/yaml
. $TOP_DIR/lib/settings

# ARGS: none
# Returns 'running', 'shutoff', 'not created'  
function vm_status() {
  vagrant status default | \
    egrep '^default[[:space:]]+(running|not created|shutoff)[[:space:]]+\(.*\)' | \
    sed -e 's/^default[[:space:]]*//' -e 's/ (.*)//' 2>&1 | grep -v nokogiri
}

# ARGS: none
# Returns: nothing, just starts the vm if stopped
function vm_run() {
  vm_state=`vm_status`

  if [ "$vm_state" != "running" ]; then
    if [ "$vm_state" == "shutoff" ]; then
      vagrant up 2>&1 | grep -v nokogiri
    elif [ "$vm_state" == "not created" ]; then
      vagrant up --provider "$vagrant_provider" 2>&1 | grep -v nokogiri
    fi
  fi
}

# ARGS: none
# Returns: nothing, just starts the vm if stopped
function vm_ip() {
  vagrant ssh -c '/var/www/html/code/bin/get-ip.sh' 2>&1 | grep -v nokogiri
}

function vm_build_iso {
  vagrant ssh -c "/var/www/html/code/bin/vagrant-build.sh $env_name $mach_def" 2>&1 | grep -v nokogiri
}
