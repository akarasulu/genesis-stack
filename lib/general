#!/bin/sh

drive_words='desktop,solid,state,ssd,series,digital,product,size,model,pro,iii,bare,buy,cache,hard,item,mtc,scan,internal,external,drive,hdd,sdd,storage,bay,bios,rpm,sata,technology,rate,nas,oem,pc,amazon,'
stop_words='a,able,about,across,after,all,almost,also,am,among,an,and,any,are,as,at,be,because,been,but,by,can,cannot,could,dear,did,do,does,either,else,ever,every,for,from,get,got,had,has,have,he,her,hers,him,his,how,however,i,if,in,into,is,it,its,just,least,let,like,likely,may,me,might,most,must,my,neither,no,nor,not,of,off,often,on,only,or,other,our,own,rather,said,say,says,she,should,since,so,some,than,that,the,their,them,then,there,these,they,this,tis,to,too,twas,us,wants,was,we,were,what,when,where,which,while,who,whom,why,will,with,would,yet,you,your'
avoid_words=$stop_words','$drive_words

#
# Functions
#

trim () {
    echo "$1" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
}

echo_err () {
   echo "[ERROR] $@" >&2
}

# ARGS: $1 - normalize size values into megabytes 3 TB, 3000GB, 23949583M etc
# OUTPUTS: amount in megabytes as a numeric string
in_mb () {
    # values from parted are in GB so let us confirm
    if [ -z "echo $1 | grep GB" ]; then
        echo_err "Failed to detect units in input size: $1"
        exit 1
    fi

    gb=`echo $1 | sed -e 's/GB//'`
    echo $(($gb * 1000))
}
